---
  version: '2'
  services:
    zookeeper:
      image: bitnami/zookeeper
      hostname: zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ALLOW_ANONYMOUS_LOGIN: "yes"
  
    broker1:
      image: bitnami/kafka
      hostname: broker1
      container_name: broker1
      depends_on:
        - zookeeper
      ports:
        - "29092:29092"
      environment:
        BROKER_ID: 1
        KAFKA_PORT: 9092
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker1:9092,EXTERNAL_SAME_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        ALLOW_PLAINTEXT_LISTENER: "yes"
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        JMX_PORT: 9999

    broker2:
      image: bitnami/kafka
      hostname: broker2
      container_name: broker2
      depends_on:
        - zookeeper
      ports:
        - "29093:29093"
      environment:
        BROKER_ID: 2
        KAFKA_PORT: 9093
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29093,INTERNAL://:9093
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker2:9093,EXTERNAL_SAME_HOST://localhost:29093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        ALLOW_PLAINTEXT_LISTENER: "yes"
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        JMX_PORT: 10000

    kafka-ui:
      image: obsidiandynamics/kafdrop
      ports:
        - 9100:9000
      environment:
        - KAFKA_BROKERCONNECT=broker1:9092
        - JVM_OPTS=-Xms32M -Xmx64M
      depends_on:
        - broker1
    query-service:
      build:
        context: .
        dockerfile: ./EDAM.Equipment.Query.API/Dockerfile
      depends_on:
        - query-service-db
      ports:
        - 8081:80
      hostname: equip-cmd-svc
      container_name: equip-cmd-svc

    query-service-db:
      image: mcr.microsoft.com/mssql/server:2019-latest      
      ports:
        - 1433:1433
      hostname: equip-event-db
      container_name: equip-event-db
      environment:
        - 'ACCEPT_EULA=Y'
        - 'SA_PASSWORD=$ADMIN_PASSWORD'

    command-service:
      build:
        context: .
        dockerfile: ./EDAM.Equipment.API/Dockerfile
      depends_on:
        - broker1
      ports:
        - 8082:80
      hostname: equip-cmd-svc
      container_name: equip-cmd-svc

    event-listener:
      build:
        context: .
        dockerfile: ./EDAM.Equipment.Listener/Dockerfile
      depends_on:
        - broker1
      ports:
        - 8083:80
      hostname: equip-cmd-svc
      container_name: equip-cmd-svc
